version: "3.7"

services:
  web_back:
    container_name: web_back
    env_file: ./backend/web_back/.env
    build:
      context: ./backend/web_back/.
      dockerfile: Dockerfile.web_back
    volumes:
      - ./backend/web_back:/code/
      # - static_volume:/code/staticfiles # <-- bind the static volume
      - static_volume:/code/static
    stdin_open: true
    tty: true
    networks:
      - backend_network
    command: gunicorn --bind :8000 config.wsgi:application
    environment:
      - CHOKIDAR_USEPOLLING=true
      - DJANGO_SETTINGS_MODULE=config.settings
    #   - DJANGO_SETTINGS_MODULE=config.local_settings
    depends_on:
      - mysql
  nginx_back:
    container_name: nginx_back
    build:
      context: ./backend/nginx_back/.
      dockerfile: Dockerfile.nginx_back
    volumes:
      - static_volume:/code/static
    tty: true
    ports:
      - "8080:80"
    networks:
      - backend_network
    depends_on:
      - web_back


  web_front:
    container_name: web_front
    build:
      context: ./frontend/web_front/.
      dockerfile: Dockerfile.web_front
    volumes:
      - ./frontend/web_front:/home/app/frontend
    tty: true
    ports:
      - 3000:3000
    working_dir: /home/app/frontend
    networks:
      - frontend_network
  nginx_front:
    container_name: nginx_front
    build:
      context: ./frontend/nginx_front/.
      dockerfile: Dockerfile.nginx_front
    ports:
      - "80:80"
    depends_on:
      - web_front
    networks:
      - frontend_network

  mysql:
    container_name: mysql
    build:
      context: ./mysql
      dockerfile: Dockerfile.mysql
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: procedureManual
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      TZ: 'Asia/Tokyo'
    volumes:
      - ./mysql_volume:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - backend_network


networks:
  backend_network:
    driver: bridge
  frontend_network:
    driver: bridge
volumes:
  static_volume:
  # mysql_volume:

